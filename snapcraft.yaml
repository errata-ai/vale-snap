name: vale
version: 3.9.6
base: core24
summary: Command-line tool and LSP that brings code-like linting to prose.
description: |
  Vale is a command-line tool that brings code-like linting to prose. It's fast,
  and highly customizable.

  For convenience, this snap also bundles the vale-ls Language Server.

  If you store documents on an external USB drive or similar, ensure you
  manually connect the removable-media interface after installing the snap:

      snap connect vale:removable-media

license: MIT
grade: stable
confinement: strict

environment:
  HOME: $SNAP_REAL_HOME
  PYTHONHOME: /usr:$SNAP/usr

layout:
  /usr/lib/ruby:
    symlink: $SNAP/usr/lib/ruby
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/ruby:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/ruby
  /usr/share/rubygems-integration/all:
    symlink: $SNAP/usr/share/rubygems-integration/all
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/rubygems-integration:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/rubygems-integration

apps:
  vale:
    command: bin/vale
    plugs:
      - home
      - removable-media
      - network # needed for vale sync
      - dot-vale
  vale-ls:
    command: bin/vale-ls
    environment:
      HOME: $SNAP_REAL_HOME
    plugs:
      - home
      - removable-media
      - dot-vale

plugs:
  dot-vale:
    interface: personal-files
    write:
      - $HOME/.vale.ini
      - $HOME/.local/share/vale
      - $HOME/.config/vale

parts:
  vale:
    plugin: go
    source: https://github.com/errata-ai/vale.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION
    build-snaps:
      - go
    override-build: |
      set -ex
      # duplicate what snapcraft would do so we can set main.version via ldflags
      go mod download all
      go install -p $SNAPCRAFT_PARALLEL_BUILD_COUNT -ldflags "-s -w -X main.version=v$SNAPCRAFT_PROJECT_VERSION  -linkmode=external" ./...

  vale-ls:
    plugin: rust
    source: https://github.com/errata-ai/vale-ls.git
    source-tag: v0.3.8

  asciidoctor:
    plugin: nil
    stage-packages:
      - asciidoctor
    override-build: |
      set -ex
      snapcraftctl build
      sed -i '1s|#!/usr/bin/ruby|#!/usr/bin/env ruby|' $SNAPCRAFT_PART_INSTALL/usr/bin/asciidoctor
      # don't try and flock() gemspecs since this is blocked by AppArmor - see
      # https://github.com/rubygems/rubygems/pull/5278 in particular
      # https://github.com/rubygems/rubygems/pull/5278/commits/27b682c81226838b1254ac5843a3f5b1cb20f076
      sed -i 's|!solaris_platform|win_platform|' $SNAPCRAFT_PART_INSTALL/usr/lib/ruby/vendor_ruby/rubygems.rb

  rst2html:
    plugin: nil
    stage-packages:
      - python3-docutils
    override-build: |
      set -ex
      snapcraftctl build
      sed -i "s|'/usr/share/docutils/'|os.path.expandvars('\$SNAP/usr/share/docutils/')|" $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages/docutils/__init__.py
    organize:
      usr/share/docutils/scripts/python3: usr/bin
